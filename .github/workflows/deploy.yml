name: Deploy Flask and Milvus App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Python 설치
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 3. Python 의존성 설치
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

      # 6. EC2로 배포
      - name: Deploy to EC2
        env:
          HOST: 3.39.237.18  # EC2 퍼블릭 IP 또는 도메인
          USER: ${{ secrets.DEPLOY_USER }}  # EC2 SSH 사용자 이름
          KEY: ${{ secrets.DEPLOY_KEY }}  # SSH 개인 키
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
        run: |
          # SSH 설정
          mkdir -p ~/.ssh
          echo "$KEY" > deploy_key.pem
          chmod 400 deploy_key.pem
          echo "Adding $HOST to known_hosts"
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts || exit 1

          # EC2 접속 및 Docker Compose 실행
          ssh -i deploy_key.pem $USER@$HOST <<EOF
            # Docker 설치 확인 및 설치
            if ! [ -x "$(command -v docker)" ]; then
              sudo yum update -y
              sudo yum install -y docker
              sudo service docker start
            fi

            # Docker Compose 설치 확인 및 설치
            if ! [ -x "$(command -v docker-compose)" ]; then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # 프로젝트 디렉터리로 이동 및 업데이트
            mkdir -p ~/flask-milvus-app
            cd ~/flask-milvus-app

            # 최신 코드 가져오기
            if [ -d .git ]; then
              git pull origin main
            else
              git clone https://github.com/yourusername/your-repo.git .
            fi

            # Docker Compose 실행
            docker-compose down
            docker-compose pull
            docker-compose up -d --build
          EOF